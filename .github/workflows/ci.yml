name: CI - Flask Login API

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-html

      - name: Start Flask app in background
        run: |
          nohup python app_login.py &
          sleep 5

      - name: Run tests and generate reports
        run: |
          pytest --cov=app_login --html=report.html --self-contained-html tests/ > test_output.log || true

      - name: Upload test report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-report-html
          path: report.html

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: pytest-log
          path: test_output.log

      - name: Display summary in GitHub Actions UI
        run: |
          echo "✅ Test run complete. Extracting summary..."

          PASSED=$(grep -oP '\d+ passed' test_output.log | grep -oP '\d+')
          FAILED=$(grep -oP '\d+ failed' test_output.log | grep -oP '\d+')
          TOTAL=$(grep -oP 'collected \d+' test_output.log | grep -oP '\d+')

          PASSED=${PASSED:-0}
          FAILED=${FAILED:-0}
          TOTAL=${TOTAL:-0}

          echo "### ✅ Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Total Tests: $TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Passed: $PASSED" >> $GITHUB_STEP_SUMMARY
          echo "- ❌ Failed: $FAILED" >> $GITHUB_STEP_SUMMARY

      - name: Commit updated test_reports.db
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git pull origin main || true
          git add test_reports.db
          git commit -m "🔄 Update test_reports.db after CI run" || echo "No changes to commit"
          git push origin main || echo "Push skipped (possibly due to no changes)"
